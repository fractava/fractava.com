stages:
  - build
  - deploy
  - metrics
  - test

webpack-build:
  image: node:lts-alpine
  stage: build
  artifacts:
    untracked: true
    paths:
      - www/dist/
  before_script:
    - cd www
    - npm install
  script:
    - npm run build

docker-build:
  image: docker:19.03.1
  stage: deploy
  services:
    - docker:19.03.1-dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  dependencies: 
    - webpack-build
  before_script:
    - docker login docker.io -u $CI_REGISTRY_USER -p "$CI_REGISTRY_PASSWORD"
  script:
    - docker build -t $CI_REGISTRY_IMAGE .
    - docker tag $CI_REGISTRY_IMAGE $CI_REGISTRY_USER/$CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH
    - docker images
    - docker push $CI_REGISTRY_USER/$CI_REGISTRY_IMAGE

lines-of-code:
  allow_failure: true
  image: node:lts-alpine
  stage: metrics
  artifacts:
    untracked: true
    paths:
      - lines-of-code.txt
  before_script:
    - npm install -g sloc
  script:
    - sh ci-tests/lines-of-code/test.sh > lines-of-code.txt

size:
  allow_failure: true
  image: node:lts-alpine
  stage: metrics
  artifacts:
    untracked: true
    paths:
      - size.txt
  script:
    - sh ci-tests/size/test.sh > size.txt

docker-run:
  image: docker:19.03.1
  stage: test
  services:
    - docker:19.03.1-dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker volume create config
  script:
    - docker pull fractava/fractava.com:$CI_COMMIT_BRANCH
    - docker run -d --rm --name='WebserverTest' --net='bridge' -e TZ="Europe/Berlin" -p '800:80/tcp' -v config:'/config' fractava/fractava.com:$CI_COMMIT_BRANCH
    
